generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Users {
  id       String        @id @default(uuid())
  admin    Boolean       @default(false)
  username String        @unique
  password String
  weights  WeightEntry[]

  @@map("users")
}

model Workout {
  id            Int           @id @default(autoincrement())
  name          String
  sets          Int
  reps          String
  amrap         Boolean       @default(false)
  type          split
  supersettedId Int?          @unique
  alternateId   Int?          @unique
  alt           Boolean       @default(false)
  ss            Boolean       @default(false)
  weights       WeightEntry[]
  alternate     Workout?      @relation("Alternate", fields: [alternateId], references: [id])
  primary       Workout?      @relation("Alternate")
  supersetted   Workout?      @relation("Superset", fields: [supersettedId], references: [id])
  superset      Workout?      @relation("Superset")

  @@map("workout")
}

model WeightEntry {
  id        Int      @id @default(autoincrement())
  userId    String
  workoutId Int
  weight    Decimal
  date      DateTime @default(now()) @db.Date
  user      Users    @relation(fields: [userId], references: [id])
  workout   Workout  @relation(fields: [workoutId], references: [id])

  @@map("weightentry")
}

enum split {
  push
  pull
  legs
}
